library(tidyverse)
library(haven)
d <- read_dta("lakisha_aer.dta")
d_selected <- d %>%
select(call, firstname, race, sex)
d_summarized <- d_selected|>
group_by(race)|>
summarize(callback_rate = mean(call),
number_cases = n()) %>%
print()
se_binary <- function(p, n) {
se <- sqrt( p * (1 - p) / n )
return(se)}
d_summarized<-d_summarized|>
mutate(
se=se_binary(callback_rate,number_cases)
)
d_summarized
#|echo: F
#|fig.height: 2
normal_curve <- data.frame(x = qnorm(seq(.01,.99,.0025))) %>%
mutate(f = dnorm(x))
normal_curve %>%
ggplot(aes(x = x, y = f)) +
geom_ribbon(data = normal_curve %>%
filter(x >= qnorm(.025) & x <= qnorm(.975)),
aes(ymin = 0, ymax = f),
color = "gray", alpha = .2) +
geom_line() +
geom_hline(yintercept = 0) +
annotate(geom = "segment",
x = qnorm(c(.025,.5,.975)),
xend = qnorm(c(.025,.5,.975)),
y = 0, yend = dnorm(qnorm(c(.025,.5,.975))),
linetype = "dashed") +
annotate(geom = "text", hjust = 0,
x = 0.05, y = .7 * dnorm(0),
label = "True\nParameter\nValue") +
annotate(geom = "segment",
x = qnorm(.1), xend = qnorm(.9),
y = .2 * dnorm(0), yend = .2 * dnorm(0),
arrow = arrow(ends = "both", length = unit(8,"pt"))) +
annotate(geom = "label",
x = 0, y = .2*dnorm(0),
label = "'Middle 95% of Sample-Based Estimates'~hat(pi)^a",
parse = T,
fill = "gray", label.size = NA) +
annotate(geom = "text", label = "Estimate is normally distributed over\nhypothetical repeated samples by the\nCentral Limit Theorem because\nthe estimate is a sample mean",
size = 3,
x = qnorm(.99), y = dnorm(qnorm(.5)),
hjust = 1, vjust = 1) +
scale_x_continuous(breaks = c(-qnorm(.975),0,qnorm(.975)),
labels = c(expression(pi^a - {Phi^{-1}} (.975)*SE(hat(pi)^a),
pi^a,
pi^a + {Phi^{-1}} (.975)*SE(hat(pi)^a)))) +
theme_void() +
theme(axis.text.x = element_text(color = "black"))
ci_lower <- function(estimate, standard_error) {
estimate - qnorm(.975) * standard_error
}
ci_upper <- function(estimate, standard_error) {
estimate + qnorm(.975) * standard_error
}
d_summarized<-d_summarized|>
mutate(
uper_ci=ci_upper(callback_rate,se),
lower_ci=ci_lower(callback_rate,se)
)
d_summarized
